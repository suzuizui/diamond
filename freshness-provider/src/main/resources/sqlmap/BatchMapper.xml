<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.opc.freshness.service.dao.BatchMapper">
    <resultMap id="BaseResultMap" type="com.opc.freshness.domain.po.BatchPo">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="kinds_id" jdbcType="INTEGER" property="kindsId"/>
        <result column="shop_id" jdbcType="INTEGER" property="shopId"/>
        <result column="shop_name" jdbcType="VARCHAR" property="shopName"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="delay_time" jdbcType="TIMESTAMP" property="delayTime"/>
        <result column="expired_time" jdbcType="TIMESTAMP" property="expiredTime"/>
        <result column="expired_real_time" jdbcType="TIMESTAMP" property="expiredRealTime"/>
        <result column="sell_out_time" jdbcType="TIMESTAMP" property="sellOutTime"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="last_modify_time" jdbcType="TIMESTAMP" property="lastModifyTime"/>
        <result column="total_count" jdbcType="INTEGER" property="totalCount"/>
        <result column="expired_count" jdbcType="INTEGER" property="expiredCount"/>
        <result column="break_count" jdbcType="INTEGER" property="breakCount"/>
        <result column="extras" jdbcType="VARCHAR" property="extras"/>
        <result column="group_flag" jdbcType="VARCHAR" property="groupFlag"/>
        <result column="fresh_flag" jdbcType="BIT" property="freshFlag"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, name, kinds_id, shop_id, shop_name, status, delay_time, expired_time, expired_real_time, sell_out_time, create_time, last_modify_time, total_count, expired_count, break_count, extras, group_flag, fresh_flag
    </sql>
    <sql id="alias_Column_List">
        f.id, f.name, f.kinds_id, f.shop_id, f.shop_name, f.status, f.delay_time, f.expired_time, f.expired_real_time, f.sell_out_time, f.create_time, f.last_modify_time, f.total_count, f.expired_count, f.break_count, f.extras, f.group_flag, f.fresh_flag
    </sql>
    <sql id="selectLastNGroupByKindAndFlagSubQuery">
        SELECT
        DISTINCT a.id AS id
        FROM freshness_batch a LEFT JOIN freshness_batch b
        ON a.kinds_id = b.kinds_id
        AND a.group_flag = b.group_flag
        <![CDATA[   AND a.create_time <= b.create_time ]]>
        WHERE a.shop_id = #{shopId,jdbcType=INTEGER}
        AND a.status IN
        <foreach collection="status" separator="," item="item" open="(" close=")">
            #{item,jdbcType=INTEGER}
        </foreach>
        GROUP BY a.kinds_id, a.group_flag, a.create_time
        <![CDATA[  HAVING count(b.create_time) <= ]]>   #{count,jdbcType=INTEGER}
    </sql>
    <sql id="UpdateSet">
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="kindsId != null">
                kinds_id = #{kindsId,jdbcType=INTEGER},
            </if>
            <if test="shopId != null">
                shop_id = #{shopId,jdbcType=INTEGER},
            </if>
            <if test="shopName != null">
                shop_name = #{shopName,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="delayTime != null">
                delay_time = #{delayTime,jdbcType=TIMESTAMP},
            </if>
            <if test="expiredRealTime != null">
                expired_real_time = #{expiredRealTime,jdbcType=TIMESTAMP},
            </if>
            <if test="sellOutTime != null">
                sell_out_time = #{sellOutTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="totalCount != null">
                total_count = #{totalCount,jdbcType=INTEGER},
            </if>
            <if test="expiredCount != null">
                expired_count = #{expiredCount,jdbcType=INTEGER},
            </if>
            <if test="breakCount != null">
                break_count = #{breakCount,jdbcType=INTEGER},
            </if>
            <if test="extras != null">
                extras = #{extras,jdbcType=VARCHAR},
            </if>
            <if test="groupFlag != null">
                group_flag= #{groupFlag,jdbcType=INTEGER},
            </if>
            <if test="freshFlag != null">
                fresh_flag = #{freshFlag,jdbcType=BIT},
            </if>
        </set>
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from freshness_batch
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectLastNGroupByKindAndFlag" resultMap="BaseResultMap">
        SELECT
        <include refid="alias_Column_List"/>
        FROM freshness_batch f
        INNER JOIN (<include refid="selectLastNGroupByKindAndFlagSubQuery"/>) temp ON f.id =temp.id
        ORDER BY f.kinds_id ASC, f.create_time ASC
    </select>
    <select id="selectByRecord" parameterType="com.opc.freshness.domain.po.BatchPo" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from freshness_batch f
        where 1=1
        <if test="id != null">
            AND id = #{id,jdbcType=INTEGER}
        </if>
        <if test="kindsId != null">
            AND kinds_id = #{kindsId,jdbcType=INTEGER}
        </if>
        <if test="shopId != null">
            AND shop_id = #{shopId,jdbcType=INTEGER}
        </if>
        <if test="shopName != null ">
            AND shop_name = #{shopName,jdbcType=VARCHAR}
        </if>
        <if test="status != null">
            AND status = #{status,jdbcType=INTEGER}
        </if>
        <if test="expiredTime != null">
            AND expired_time = #{expiredTime,jdbcType=TIMESTAMP}
        </if>
        <if test="expiredRealTime != null">
            AND expired_real_time = #{expiredRealTime,jdbcType=TIMESTAMP}
        </if>
        <if test="createTime != null">
            AND date(create_time) = date(#{createTime,jdbcType=TIMESTAMP})
        </if>
    </select>
    <select id="batchListBySkuIdAndKindId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM freshness_batch
        WHERE id IN (SELECT DISTINCT batch_id FROM freshness_batch_state a WHERE a.sku_id = #{skuId,jdbcType=INTEGER})
        AND shop_id = #{shopId,jdbcType=INTEGER}
        AND status IN (1,2,3)
        AND kinds_id = #{kindId,jdbcType=INTEGER}
        order by create_time desc
        <if test="limit!=null">
            limit #{limit,jdbcType=INTEGER}
        </if>
    </select>
    <select id="selectNextDelayTime" resultType="java.util.Date">
        SELECT min(delay_time)
        FROM freshness_batch
       <![CDATA[ WHERE delay_time >= #{now,jdbcType=TIMESTAMP}
        ]]>
        AND shop_id = #{shopId,jdbcType=INTEGER}
              AND status IN (1, 5)
    </select>
    <select id="selectNextExpiredTime" resultType="java.util.Date">
        SELECT min(expired_time)
        FROM freshness_batch
        <![CDATA[ WHERE expired_time >= #{now,jdbcType=TIMESTAMP}
        ]]>
        AND shop_id = #{shopId,jdbcType=INTEGER}
              AND status IN (1, 5)

    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        DELETE FROM freshness_batch
        WHERE id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insertSelective" parameterType="com.opc.freshness.domain.po.BatchPo" useGeneratedKeys="true"
            keyProperty="id">
        insert into freshness_batch
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="kindsId != null">
                kinds_id,
            </if>
            <if test="shopId != null">
                shop_id,
            </if>
            <if test="shopName != null">
                shop_name,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="delayTime != null">
                delay_time,
            </if>
            <if test="expiredTime != null">
                expired_time,
            </if>
            <if test="expiredRealTime != null">
                expired_real_time,
            </if>
            <if test="sellOutTime != null">
                sell_out_time,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="lastModifyTime != null">
                last_modify_time,
            </if>
            <if test="totalCount != null">
                total_count,
            </if>
            <if test="expiredCount != null">
                expired_count,
            </if>
            <if test="breakCount != null">
                break_count,
            </if>
            <if test="extras != null">
                extras,
            </if>
            <if test="groupFlag != null">
                group_flag,
            </if>
            <if test="freshFlag != null">
                fresh_flag,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="kindsId != null">
                #{kindsId,jdbcType=INTEGER},
            </if>
            <if test="shopId != null">
                #{shopId,jdbcType=INTEGER},
            </if>
            <if test="shopName != null">
                #{shopName,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="delayTime != null">
                #{delayTime,jdbcType=TIMESTAMP},
            </if>
            <if test="expiredTime != null">
                #{expiredTime,jdbcType=TIMESTAMP},
            </if>
            <if test="expiredRealTime != null">
                #{expiredRealTime,jdbcType=TIMESTAMP},
            </if>
            <if test="sellOutTime != null">
                #{sellOutTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastModifyTime != null">
                #{lastModifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="totalCount != null">
                #{totalCount,jdbcType=INTEGER},
            </if>
            <if test="expiredCount != null">
                #{expiredCount,jdbcType=INTEGER},
            </if>
            <if test="breakCount != null">
                #{breakCount,jdbcType=INTEGER},
            </if>
            <if test="extras != null">
                #{extras,jdbcType=VARCHAR},
            </if>
            <if test="groupFlag != null">
                #{groupFlag,jdbcType=INTEGER},
            </if>
            <if test="freshFlag != null">
                #{freshFlag,jdbcType=BIT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.opc.freshness.domain.po.BatchPo">
        update freshness_batch
        <include refid="UpdateSet"/>
        where id = #{id,jdbcType=INTEGER}
        <if test="lastModifyTime != null">
            AND last_modify_time = #{lastModifyTime,jdbcType=TIMESTAMP}
        </if>
    </update>
    <update id="updateByGroupFlagSelective" parameterType="com.opc.freshness.domain.po.BatchPo">
        update freshness_batch
        <include refid="UpdateSet"/>
        where group_flag = #{groupFlag,jdbcType=INTEGER}
        and shop_id =#{shopId,jdbcType=INTEGER}
        <if test="lastModifyTime != null">
            AND last_modify_time = #{lastModifyTime,jdbcType=TIMESTAMP}
        </if>
    </update>
</mapper>